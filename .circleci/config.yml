version: 2.1

commands:
  dependencies:
    steps:
      - run: yum -y install tar less gzip #needed to attach_workspace

workflows:
  blue_green_workflow:
    jobs:
      - create_and_deploy_front_end:
          context: aws
          #- promote_to_production:
          #requires: 
          #  - create_and_deploy_front_end

jobs:
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
          --template-file bucket.yml \
          --stack-name $CIRCLE_PROJECT_REPONAME$CIRCLE_WORKFLOW_ID \
          --parameter-overrides NAME=$CIRCLE_PROJECT_REPONAME$CIRCLE_WORKFLOW_ID
      - run: aws s3 sync . s3://$CIRCLE_PROJECT_REPONAME$CIRCLE_WORKFLOW_ID --delete

  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - dependencies
      - run:
          name: "Query for last deployment id"
          command: |
            cd /home/circleci/project
            aws cloudformation list-exports \
            --query "Exports[?Name==\`PipelineID\`].Value" \
            --no-paginate --output text >> last_deploy_id
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project

  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - dependencies
      - attach_workspace:
          at: /home/circleci
      - run:
          name: "Production distro"
          command: |
            aws cloudformation deploy --template-file cloudfront.yml \
            --stack-name production-distro \
            --parameter-overrides PipelineID="$CIRCLE_PROJECT_REPONAME$CIRCLE_WORKFLOW_ID"

  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - dependencies
      - attach_workspace:
          at: /home/circleci
      - run:
          name: "Production distro"
          command: |
            PreviousPipelineID=$(cat /home/circleci/last_deploy_id)
            aws s3 rm "s3://${PreviousPipelineID}" --recursive
            aws cloudformation delete-stack --stack-name "${PreviousPipelineID}"
            





